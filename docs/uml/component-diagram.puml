@startuml 訂單系統組件圖
!include <C4/C4_Component>

LAYOUT_WITH_LEGEND()

title 訂單系統組件圖

Component(rest_api, "REST API控制器", "Spring MVC", "提供HTTP端點")
Component(app_service, "應用服務", "Spring Service", "處理業務邏輯")
Component(domain_model, "領域模型", "Domain", "核心業務邏輯")

Container_Boundary(ports, "端口") {
    Component(in_port, "OrderManagementUseCase", "Port", "入站端口")
    Component(out_port_db, "OrderPersistencePort", "Port", "出站端口 - 持久化")
    Component(out_port_payment, "PaymentServicePort", "Port", "出站端口 - 支付")
    Component(out_port_logistics, "LogisticsServicePort", "Port", "出站端口 - 物流")
}

Container_Boundary(adapters, "適配器") {
    Component(jpa_repo, "JPA儲存庫", "Spring Data", "資料持久化")
    Component(payment_adapter, "支付適配器", "Adapter", "支付服務整合")
    Component(logistics_adapter, "物流適配器", "Adapter", "物流服務整合")
}

Container_Boundary(core, "核心領域") {
    Component(order_aggregate, "訂單聚合根", "Aggregate", "訂單核心邏輯")
    Component(order_factory, "訂單工廠", "Factory", "建立訂單")
    Component(domain_events, "領域事件", "Events", "領域事件發布")
}

Rel(rest_api, in_port, "使用")
Rel(in_port, app_service, "實現")
Rel(app_service, domain_model, "使用")
Rel(domain_model, out_port_db, "使用")
Rel(domain_model, out_port_payment, "使用")
Rel(domain_model, out_port_logistics, "使用")

Rel(jpa_repo, out_port_db, "實現")
Rel(payment_adapter, out_port_payment, "實現")
Rel(logistics_adapter, out_port_logistics, "實現")

Rel(order_factory, order_aggregate, "建立")
Rel(order_aggregate, domain_events, "發布事件")

@enduml
